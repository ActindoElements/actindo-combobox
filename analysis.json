{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "Material design: [Dropdown menus](https://www.google.com/design/spec/components/buttons.html#buttons-dropdown-buttons)\n\n`paper-dropdown-menu` is similar to a native browser select element.\n`paper-dropdown-menu` works with selectable content. The currently selected\nitem is displayed in the control. If no item is selected, the `label` is\ndisplayed instead.\n\nExample:\n\n    <paper-dropdown-menu label=\"Your favourite pastry\">\n      <paper-listbox slot=\"dropdown-content\">\n        <paper-item>Croissant</paper-item>\n        <paper-item>Donut</paper-item>\n        <paper-item>Financier</paper-item>\n        <paper-item>Madeleine</paper-item>\n      </paper-listbox>\n    </paper-dropdown-menu>\n\nThis example renders a dropdown menu with 4 options.\n\nThe child element with the slot `dropdown-content` is used as the dropdown\nmenu. This can be a [`paper-listbox`](paper-listbox), or any other or\nelement that acts like an [`iron-selector`](iron-selector).\n\nSpecifically, the menu child must fire an\n[`iron-select`](iron-selector#event-iron-select) event when one of its\nchildren is selected, and an [`iron-deselect`](iron-selector#event-iron-deselect)\nevent when a child is deselected. The selected or deselected item must\nbe passed as the event's `detail.item` property.\n\nApplications can listen for the `iron-select` and `iron-deselect` events\nto react when options are selected and deselected.\n\n### Styling\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dropdown-menu` | A mixin that is applied to the element host | `{}`\n`--paper-dropdown-menu-disabled` | A mixin that is applied to the element host when disabled | `{}`\n`--paper-dropdown-menu-ripple` | A mixin that is applied to the internal ripple | `{}`\n`--paper-dropdown-menu-button` | A mixin that is applied to the internal menu button | `{}`\n`--paper-dropdown-menu-input` | A mixin that is applied to the internal paper input | `{}`\n`--paper-dropdown-menu-icon` | A mixin that is applied to the internal icon | `{}`\n\nYou can also use any of the `paper-input-container` and `paper-menu-button`\nstyle mixins and custom properties to style the internal input and menu button\nrespectively.",
      "summary": "",
      "path": "actindo-dropdown-menu.html",
      "properties": [
        {
          "name": "selectedItemLabel",
          "type": "string",
          "description": "The derived \"label\" of the currently selected item. This value\nis the `label` property on the selected item if set, or else the\ntrimmed text content of the selected item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 20
            },
            "end": {
              "line": 157,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "selectedItem",
          "type": "?Object",
          "description": "The last selected item. An item is selected if the dropdown menu has\na child with slot `dropdown-content`, and that child triggers an\n`iron-select` event with the selected `item` in the `detail`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 20
            },
            "end": {
              "line": 170,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "value",
          "type": "string",
          "description": "The value for this element that will be used when submitting in\na form. It is read only, and will always have the same value\nas `selectedItemLabel`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 20
            },
            "end": {
              "line": 181,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "label",
          "type": "string",
          "description": "The label for the dropdown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 20
            },
            "end": {
              "line": 188,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "The placeholder for the dropdown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 20
            },
            "end": {
              "line": 195,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "errorMessage",
          "type": "string",
          "description": "The error message to display when invalid.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 20
            },
            "end": {
              "line": 202,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "True if the dropdown is open. Otherwise, false.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 20
            },
            "end": {
              "line": 212,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_openedChanged\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "allowOutsideScroll",
          "type": "boolean",
          "description": "By default, the dropdown will constrain scrolling on the page\nto itself when opened.\nSet to true in order to prevent scroll from being constrained\nto the dropdown when it opens.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 220,
              "column": 20
            },
            "end": {
              "line": 223,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "noLabelFloat",
          "type": "boolean",
          "description": "Set to true to disable the floating label. Bind this to the\n`<paper-input-container>`'s `noLabelFloat` property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 20
            },
            "end": {
              "line": 233,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "alwaysFloatLabel",
          "type": "boolean",
          "description": "Set to true to always float the label. Bind this to the\n`<paper-input-container>`'s `alwaysFloatLabel` property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 20
            },
            "end": {
              "line": 242,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "noAnimations",
          "type": "boolean",
          "description": "Set to true to disable animations when opening and closing the\ndropdown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 20
            },
            "end": {
              "line": 251,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "horizontalAlign",
          "type": "string",
          "description": "The orientation against which to align the menu dropdown\nhorizontally relative to the dropdown trigger.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 20
            },
            "end": {
              "line": 260,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"right\""
        },
        {
          "name": "verticalAlign",
          "type": "string",
          "description": "The orientation against which to align the menu dropdown\nvertically relative to the dropdown trigger.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 20
            },
            "end": {
              "line": 269,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"top\""
        },
        {
          "name": "dynamicAlign",
          "type": "boolean",
          "description": "If true, the `horizontalAlign` and `verticalAlign` properties will\nbe considered preferences instead of strict requirements when\npositioning the dropdown and may be changed if doing so reduces\nthe area of the dropdown falling outside of `fitInto`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 277,
              "column": 20
            },
            "end": {
              "line": 279,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "fitInto",
          "type": "Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 20
            },
            "end": {
              "line": 283,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "restoreFocusOnClose",
          "type": "boolean",
          "description": "Whether focus should be restored to the dropdown when the menu closes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 20
            },
            "end": {
              "line": 291,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "verticalOffset",
          "type": "number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 20
            },
            "end": {
              "line": 295,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "55"
        },
        {
          "name": "keyBindings",
          "type": "Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 302,
              "column": 16
            },
            "end": {
              "line": 305,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "hostAttributes",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 307,
              "column": 16
            },
            "end": {
              "line": 311,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "contentElement",
          "type": "Function",
          "description": "The content element that is contained by the dropdown menu, if any.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 331,
              "column": 16
            },
            "end": {
              "line": 339,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 16
            },
            "end": {
              "line": 326,
              "column": 17
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "open",
          "description": "Show the dropdown content.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 344,
              "column": 16
            },
            "end": {
              "line": 346,
              "column": 17
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "close",
          "description": "Hide the dropdown content.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 351,
              "column": 16
            },
            "end": {
              "line": 353,
              "column": 17
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onIronSelect",
          "description": "A handler that is called when `iron-select` is fired.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 16
            },
            "end": {
              "line": 362,
              "column": 17
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "CustomEvent",
              "description": "An `iron-select` event."
            }
          ]
        },
        {
          "name": "_onIronDeselect",
          "description": "A handler that is called when `iron-deselect` is fired.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 369,
              "column": 16
            },
            "end": {
              "line": 371,
              "column": 17
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "CustomEvent",
              "description": "An `iron-deselect` event."
            }
          ]
        },
        {
          "name": "_onTap",
          "description": "A handler that is called when the dropdown is tapped.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 378,
              "column": 16
            },
            "end": {
              "line": 382,
              "column": 17
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "CustomEvent",
              "description": "A tap event."
            }
          ]
        },
        {
          "name": "_selectedItemChanged",
          "description": "Compute the label for the dropdown given a selected item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 390,
              "column": 16
            },
            "end": {
              "line": 400,
              "column": 17
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedItem",
              "type": "Element",
              "description": "A selected Element item, with an\noptional `label` property."
            }
          ]
        },
        {
          "name": "_computeMenuVerticalOffset",
          "description": "Compute the vertical offset of the menu based on the value of\n`noLabelFloat`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 409,
              "column": 16
            },
            "end": {
              "line": 419,
              "column": 17
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noLabelFloat",
              "type": "boolean",
              "description": "True if the label should not float\nabove the input, otherwise false."
            },
            {
              "name": "verticalOffset"
            }
          ]
        },
        {
          "name": "_getValidity",
          "description": "Returns false if the element is required and does not have a selection,\nand true otherwise.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 428,
              "column": 16
            },
            "end": {
              "line": 430,
              "column": 17
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_value",
              "type": "*=",
              "description": "Ignored."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "true if `required` is false, or if `required` is true\nand the element has a valid selection."
          }
        },
        {
          "name": "_openedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 432,
              "column": 16
            },
            "end": {
              "line": 442,
              "column": 17
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 138,
          "column": 20
        },
        "end": {
          "line": 443,
          "column": 13
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "selected-item-label",
          "description": "The derived \"label\" of the currently selected item. This value\nis the `label` property on the selected item if set, or else the\ntrimmed text content of the selected item.",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 20
            },
            "end": {
              "line": 157,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "selected-item",
          "description": "The last selected item. An item is selected if the dropdown menu has\na child with slot `dropdown-content`, and that child triggers an\n`iron-select` event with the selected `item` in the `detail`.",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 20
            },
            "end": {
              "line": 170,
              "column": 21
            }
          },
          "metadata": {},
          "type": "?Object"
        },
        {
          "name": "value",
          "description": "The value for this element that will be used when submitting in\na form. It is read only, and will always have the same value\nas `selectedItemLabel`.",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 20
            },
            "end": {
              "line": 181,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "label",
          "description": "The label for the dropdown.",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 20
            },
            "end": {
              "line": 188,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "placeholder",
          "description": "The placeholder for the dropdown.",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 20
            },
            "end": {
              "line": 195,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "error-message",
          "description": "The error message to display when invalid.",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 20
            },
            "end": {
              "line": 202,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "opened",
          "description": "True if the dropdown is open. Otherwise, false.",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 20
            },
            "end": {
              "line": 212,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "allow-outside-scroll",
          "description": "By default, the dropdown will constrain scrolling on the page\nto itself when opened.\nSet to true in order to prevent scroll from being constrained\nto the dropdown when it opens.",
          "sourceRange": {
            "start": {
              "line": 220,
              "column": 20
            },
            "end": {
              "line": 223,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-label-float",
          "description": "Set to true to disable the floating label. Bind this to the\n`<paper-input-container>`'s `noLabelFloat` property.",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 20
            },
            "end": {
              "line": 233,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "always-float-label",
          "description": "Set to true to always float the label. Bind this to the\n`<paper-input-container>`'s `alwaysFloatLabel` property.",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 20
            },
            "end": {
              "line": 242,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-animations",
          "description": "Set to true to disable animations when opening and closing the\ndropdown.",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 20
            },
            "end": {
              "line": 251,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the menu dropdown\nhorizontally relative to the dropdown trigger.",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 20
            },
            "end": {
              "line": 260,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the menu dropdown\nvertically relative to the dropdown trigger.",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 20
            },
            "end": {
              "line": 269,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "dynamic-align",
          "description": "If true, the `horizontalAlign` and `verticalAlign` properties will\nbe considered preferences instead of strict requirements when\npositioning the dropdown and may be changed if doing so reduces\nthe area of the dropdown falling outside of `fitInto`.",
          "sourceRange": {
            "start": {
              "line": 277,
              "column": 20
            },
            "end": {
              "line": 279,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "fit-into",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 20
            },
            "end": {
              "line": 283,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "restore-focus-on-close",
          "description": "Whether focus should be restored to the dropdown when the menu closes.",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 20
            },
            "end": {
              "line": 291,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "vertical-offset",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 20
            },
            "end": {
              "line": 295,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "selected-item-label-changed",
          "description": "Fired when the `selectedItemLabel` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-item-changed",
          "description": "Fired when the `selectedItem` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "opened-changed",
          "description": "Fired when the `opened` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "dropdown-content",
          "range": {
            "file": "actindo-dropdown-menu.html",
            "start": {
              "line": 130,
              "column": 12
            },
            "end": {
              "line": 130,
              "column": 86
            }
          }
        }
      ],
      "tagname": "actindo-dropdown-menu"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-combobox.html",
      "properties": [
        {
          "name": "verticalOffset",
          "type": "number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 20
            },
            "end": {
              "line": 261,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "55"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "set to true if combobox is disabled",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 20
            },
            "end": {
              "line": 269,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "items",
          "type": "Array",
          "description": "Contains all the items; filled either by remote request or if no remote is given by parameter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 20
            },
            "end": {
              "line": 279,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"onItemsChange\""
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "selectedValue",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 20
            },
            "end": {
              "line": 285,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "searchable",
          "type": "boolean",
          "description": "Defines if the combobox is searchable",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 20
            },
            "end": {
              "line": 293,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "label",
          "type": "string",
          "description": "Label of the combobox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 298,
              "column": 20
            },
            "end": {
              "line": 300,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "name",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 302,
              "column": 20
            },
            "end": {
              "line": 304,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "invalid",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 20
            },
            "end": {
              "line": 310,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "errorMessage",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 20
            },
            "end": {
              "line": 314,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "selected",
          "type": "number",
          "description": "Contains the row index of the selected value",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 320,
              "column": 20
            },
            "end": {
              "line": 323,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"selectedChanged\""
            }
          }
        },
        {
          "name": "_selectedItem",
          "type": "Object",
          "description": "Contains the current selected item",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 329,
              "column": 20
            },
            "end": {
              "line": 331,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "selectedItem",
          "type": "Object",
          "description": "Contains the current selected item without style attribute",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 20
            },
            "end": {
              "line": 340,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "value",
          "type": "string",
          "description": "Contains the content of the value field of the selected item",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 20
            },
            "end": {
              "line": 349,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"valueChanged\""
            }
          }
        },
        {
          "name": "displayField",
          "type": "string",
          "description": "Determines which field is used to display a row",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 354,
              "column": 20
            },
            "end": {
              "line": 357,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"text\""
        },
        {
          "name": "displayFieldDescription",
          "type": "string",
          "description": "Determines greyed out Description of a row",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 362,
              "column": 20
            },
            "end": {
              "line": 364,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "valueField",
          "type": "string",
          "description": "Determines which fields is used to fill the value field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 369,
              "column": 20
            },
            "end": {
              "line": 372,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"id\""
        },
        {
          "name": "labelField",
          "type": "string",
          "description": "Determines which fields is used to show the value displayed after selection;\nif null the value in displayField will be used",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 378,
              "column": 20
            },
            "end": {
              "line": 380,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "render",
          "type": "Object",
          "description": "Could contain a render function that determines how the row looks like",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 385,
              "column": 20
            },
            "end": {
              "line": 387,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "searchValue",
          "type": "string",
          "description": "Contains the current search pattern",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 392,
              "column": 20
            },
            "end": {
              "line": 396,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_doSearch\""
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "remote",
          "type": "string",
          "description": "Contains the url from where the data is obtained",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 401,
              "column": 20
            },
            "end": {
              "line": 405,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onRemoteChanged\""
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "remoteSearch",
          "type": "boolean",
          "description": "Determines if the search is done locally or remotely if a remote is set",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 410,
              "column": 20
            },
            "end": {
              "line": 413,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "params",
          "type": "Object",
          "description": "Params that are sent when remote data is loaded",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 418,
              "column": 20
            },
            "end": {
              "line": 421,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onParamsChanged\""
            }
          }
        },
        {
          "name": "remotePathData",
          "type": "string",
          "description": "Determines which field of the response is contains the items",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 426,
              "column": 20
            },
            "end": {
              "line": 429,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"data\""
        },
        {
          "name": "totalItemsField",
          "type": "string",
          "description": "Determines which field of the response is determines the total count items",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 434,
              "column": 20
            },
            "end": {
              "line": 437,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"n_rows\""
        },
        {
          "name": "autoLoad",
          "type": "boolean",
          "description": "Determines if the box is automatically loading from remote",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 442,
              "column": 20
            },
            "end": {
              "line": 445,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "itemsPerPage",
          "type": "number",
          "description": "Numbers of items per page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 450,
              "column": 20
            },
            "end": {
              "line": 454,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onItemsPerPageChanged\""
            }
          },
          "defaultValue": "-1"
        },
        {
          "name": "_paged",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 460,
              "column": 20
            },
            "end": {
              "line": 463,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "startField",
          "type": "string",
          "description": "Determine which field we use in the request to define the start of the paging",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 468,
              "column": 20
            },
            "end": {
              "line": 471,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"start\""
        },
        {
          "name": "limitField",
          "type": "string",
          "description": "Determines which field is used in the request to send the limit",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 476,
              "column": 20
            },
            "end": {
              "line": 479,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"limit\""
        },
        {
          "name": "totalItems",
          "type": "number",
          "description": "Information how many items would exist in total",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 484,
              "column": 20
            },
            "end": {
              "line": 487,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "0"
        },
        {
          "name": "page",
          "type": "number",
          "description": "current page we are on",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 492,
              "column": 20
            },
            "end": {
              "line": 496,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"onPageChanged\""
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "_loading",
          "type": "boolean",
          "description": "True if combobox is currently loading",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 502,
              "column": 20
            },
            "end": {
              "line": 505,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_loadingCount",
          "type": "number",
          "description": "Amount of active transactions",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 511,
              "column": 20
            },
            "end": {
              "line": 515,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onLoadingCountChanged\""
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "allowDeselect",
          "type": "boolean",
          "description": "Determines if deselect is allowed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 520,
              "column": 20
            },
            "end": {
              "line": 523,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "noLabelFloat",
          "type": "boolean",
          "description": "Set to true to disable the floating label.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 528,
              "column": 20
            },
            "end": {
              "line": 531,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "alwaysFloatLabel",
          "type": "boolean",
          "description": "Set to true to always float the label.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 536,
              "column": 20
            },
            "end": {
              "line": 539,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "required",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 541,
              "column": 20
            },
            "end": {
              "line": 544,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "noAnimations",
          "type": "boolean",
          "description": "Set to true to disable animations when opening and closing the\ndropdown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 550,
              "column": 20
            },
            "end": {
              "line": 553,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "verticalAlign",
          "type": "string",
          "description": "Wraps vertical align value of paper-dropdown-menu",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 558,
              "column": 20
            },
            "end": {
              "line": 561,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"top\""
        },
        {
          "name": "horizontalAlign",
          "type": "string",
          "description": "The orientation against which to align the menu dropdown\nhorizontally relative to the dropdown trigger.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 567,
              "column": 20
            },
            "end": {
              "line": 570,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"right\""
        },
        {
          "name": "dynamicAlign",
          "type": "boolean",
          "description": "If true, the `horizontalAlign` and `verticalAlign` properties will\nbe considered preferences instead of strict requirements when\npositioning the dropdown and may be changed if doing so reduces\nthe area of the dropdown falling outside of `fitInto`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 578,
              "column": 20
            },
            "end": {
              "line": 580,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "fitInto",
          "type": "Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 582,
              "column": 20
            },
            "end": {
              "line": 584,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "_getSelectedItem",
          "description": "Remove style of selectedItem",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 593,
              "column": 12
            },
            "end": {
              "line": 598,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_selectedItem",
              "type": "Object"
            }
          ]
        },
        {
          "name": "_onPaperItemTap",
          "description": "Handles deselect if the selected item is tapped again",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 605,
              "column": 12
            },
            "end": {
              "line": 615,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ]
        },
        {
          "name": "_onLoadingCountChanged",
          "description": "Determines if there is currently an active call",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 623,
              "column": 12
            },
            "end": {
              "line": 626,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "Number"
            },
            {
              "name": "oldValue",
              "type": "Number"
            }
          ]
        },
        {
          "name": "_getSelectedValue",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 632,
              "column": 12
            },
            "end": {
              "line": 635,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "firstPage",
          "description": "loads the first page",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 643,
              "column": 12
            },
            "end": {
              "line": 646,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ]
        },
        {
          "name": "lastPage",
          "description": "loads the last page",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 654,
              "column": 12
            },
            "end": {
              "line": 657,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ]
        },
        {
          "name": "nextPage",
          "description": "loads the next page",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 665,
              "column": 12
            },
            "end": {
              "line": 668,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ]
        },
        {
          "name": "validate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 670,
              "column": 12
            },
            "end": {
              "line": 674,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "previousPage",
          "description": "loads the previous page",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 682,
              "column": 12
            },
            "end": {
              "line": 685,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ]
        },
        {
          "name": "onPageChanged",
          "description": "Triggers reload on page change",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 694,
              "column": 12
            },
            "end": {
              "line": 701,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "Number"
            },
            {
              "name": "oldValue",
              "type": "Number"
            }
          ]
        },
        {
          "name": "_serialize",
          "description": "takes the given object and creates an http query string from it\nusage: let str = _serialize({foo: 'bar', baz: ['a', 'b']}); => 'foo=bar&baz[0]=a&baz[1]=b'",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 712,
              "column": 12
            },
            "end": {
              "line": 723,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj",
              "type": "Object",
              "description": "the object to serialize"
            },
            {
              "name": "prefix",
              "type": "String",
              "description": "internal only (used in recursive calls for nested objects)"
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "_onItemsPerPageChanged",
          "description": "Determines wether paging is on or off",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 731,
              "column": 12
            },
            "end": {
              "line": 746,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "String",
              "description": "number of items per page"
            }
          ]
        },
        {
          "name": "_onRemoteChanged",
          "description": "Called when remote is changed",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 754,
              "column": 12
            },
            "end": {
              "line": 760,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "String"
            }
          ]
        },
        {
          "name": "_onParamsChanged",
          "description": "reload when params have been changed",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 768,
              "column": 12
            },
            "end": {
              "line": 778,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "Object"
            }
          ]
        },
        {
          "name": "load",
          "description": "Trigger load data\nDebounces because of quasi simultaneously changed values of itemsPerPaged and param for example or multiple page changes",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 784,
              "column": 12
            },
            "end": {
              "line": 790,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_load",
          "description": "Loads the data from remote",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 796,
              "column": 12
            },
            "end": {
              "line": 837,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "onItemsChange",
          "description": "Observer of items\nWe will apply the search to the new data if we have no remote search\nand select the correct item if the old item is still there\nif we have remote search we will insert the selected item at the beginning if it is not seen after search",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 849,
              "column": 12
            },
            "end": {
              "line": 922,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "Array"
            },
            {
              "name": "oldValue",
              "type": "Array"
            }
          ]
        },
        {
          "name": "_getDisplayValue",
          "description": "Returns the value to be displayed for the item",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 929,
              "column": 12
            },
            "end": {
              "line": 936,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object"
            }
          ]
        },
        {
          "name": "_getDisplayValueDescription",
          "description": "Returns the value to be displayed for the item",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 943,
              "column": 12
            },
            "end": {
              "line": 950,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object"
            }
          ]
        },
        {
          "name": "_getValue",
          "description": "Returns the value for the item",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 957,
              "column": 12
            },
            "end": {
              "line": 960,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object"
            }
          ]
        },
        {
          "name": "_getItemLabel",
          "description": "Returns the label of combobox",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 967,
              "column": 12
            },
            "end": {
              "line": 974,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object"
            }
          ]
        },
        {
          "name": "valueChanged",
          "description": "selected values has been changed; if this happens by data binding we select the correct record",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 983,
              "column": 12
            },
            "end": {
              "line": 1013,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "String"
            },
            {
              "name": "oldValue",
              "type": "String"
            }
          ]
        },
        {
          "name": "selectedChanged",
          "description": "selected row has been changed\nwe set the correct value and _selectedItem (that we need to restore item if remote filter removed selected item)",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1023,
              "column": 12
            },
            "end": {
              "line": 1038,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "Number"
            },
            {
              "name": "oldValue",
              "type": "Number"
            }
          ]
        },
        {
          "name": "_doSearch",
          "description": "Here we perform our search",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1045,
              "column": 12
            },
            "end": {
              "line": 1098,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "pattern",
              "type": "String"
            }
          ]
        },
        {
          "name": "_loadAfterSearch",
          "description": "Reload after search",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1103,
              "column": 12
            },
            "end": {
              "line": 1107,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_stopEventPropagation",
          "description": "Stops event propgation of selected events to avoid closing the dropdown-menu or selecting items\nwhen we dont want to do that",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1116,
              "column": 12
            },
            "end": {
              "line": 1121,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "MouseEvent"
            }
          ]
        },
        {
          "name": "_canPageBackward",
          "description": "checks if the user can page backwards",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1131,
              "column": 12
            },
            "end": {
              "line": 1133,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page",
              "type": "Number",
              "description": "the current page"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_canPageForward",
          "description": "checks if the user can page forwards",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1144,
              "column": 12
            },
            "end": {
              "line": 1146,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page",
              "type": "Number",
              "description": "the current page"
            },
            {
              "name": "itemsPerPage",
              "type": "Number",
              "description": "how many items per page should be shown"
            },
            {
              "name": "totalItems",
              "type": "Number",
              "description": "how mnay items are in the grid in total"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_getItemsFrom",
          "description": "calculates the offset for the pagination query",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1157,
              "column": 12
            },
            "end": {
              "line": 1159,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page",
              "type": "Number",
              "description": "the page to calculate the offset for"
            },
            {
              "name": "itemsPerPage",
              "type": "Number",
              "description": "how many items per page should be shown"
            },
            {
              "name": "totalItems",
              "type": "Number",
              "description": "number of total items"
            }
          ],
          "return": {
            "type": "Number"
          }
        },
        {
          "name": "_getItemsTo",
          "description": "returns the index of the last item on the given page",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1169,
              "column": 12
            },
            "end": {
              "line": 1171,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page",
              "type": "Number",
              "description": "the pag to calculate the last index for"
            },
            {
              "name": "itemsPerPage",
              "type": "Number",
              "description": "how many items per page should be shown"
            },
            {
              "name": "totalItems",
              "type": "Number"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 249,
          "column": 8
        },
        "end": {
          "line": 1173,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoCombobox",
      "attributes": [
        {
          "name": "vertical-offset",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 20
            },
            "end": {
              "line": 261,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "disabled",
          "description": "set to true if combobox is disabled",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 20
            },
            "end": {
              "line": 269,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "items",
          "description": "Contains all the items; filled either by remote request or if no remote is given by parameter",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 20
            },
            "end": {
              "line": 279,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "selected-value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 20
            },
            "end": {
              "line": 285,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "searchable",
          "description": "Defines if the combobox is searchable",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 20
            },
            "end": {
              "line": 293,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "label",
          "description": "Label of the combobox",
          "sourceRange": {
            "start": {
              "line": 298,
              "column": 20
            },
            "end": {
              "line": 300,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "name",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 302,
              "column": 20
            },
            "end": {
              "line": 304,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "invalid",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 20
            },
            "end": {
              "line": 310,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "error-message",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 20
            },
            "end": {
              "line": 314,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "selected-item",
          "description": "Contains the current selected item without style attribute",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 20
            },
            "end": {
              "line": 340,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "value",
          "description": "Contains the content of the value field of the selected item",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 20
            },
            "end": {
              "line": 349,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "display-field",
          "description": "Determines which field is used to display a row",
          "sourceRange": {
            "start": {
              "line": 354,
              "column": 20
            },
            "end": {
              "line": 357,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "display-field-description",
          "description": "Determines greyed out Description of a row",
          "sourceRange": {
            "start": {
              "line": 362,
              "column": 20
            },
            "end": {
              "line": 364,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value-field",
          "description": "Determines which fields is used to fill the value field",
          "sourceRange": {
            "start": {
              "line": 369,
              "column": 20
            },
            "end": {
              "line": 372,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "label-field",
          "description": "Determines which fields is used to show the value displayed after selection;\nif null the value in displayField will be used",
          "sourceRange": {
            "start": {
              "line": 378,
              "column": 20
            },
            "end": {
              "line": 380,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "render",
          "description": "Could contain a render function that determines how the row looks like",
          "sourceRange": {
            "start": {
              "line": 385,
              "column": 20
            },
            "end": {
              "line": 387,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "search-value",
          "description": "Contains the current search pattern",
          "sourceRange": {
            "start": {
              "line": 392,
              "column": 20
            },
            "end": {
              "line": 396,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote",
          "description": "Contains the url from where the data is obtained",
          "sourceRange": {
            "start": {
              "line": 401,
              "column": 20
            },
            "end": {
              "line": 405,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-search",
          "description": "Determines if the search is done locally or remotely if a remote is set",
          "sourceRange": {
            "start": {
              "line": 410,
              "column": 20
            },
            "end": {
              "line": 413,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "params",
          "description": "Params that are sent when remote data is loaded",
          "sourceRange": {
            "start": {
              "line": 418,
              "column": 20
            },
            "end": {
              "line": 421,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "remote-path-data",
          "description": "Determines which field of the response is contains the items",
          "sourceRange": {
            "start": {
              "line": 426,
              "column": 20
            },
            "end": {
              "line": 429,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "total-items-field",
          "description": "Determines which field of the response is determines the total count items",
          "sourceRange": {
            "start": {
              "line": 434,
              "column": 20
            },
            "end": {
              "line": 437,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "auto-load",
          "description": "Determines if the box is automatically loading from remote",
          "sourceRange": {
            "start": {
              "line": 442,
              "column": 20
            },
            "end": {
              "line": 445,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "items-per-page",
          "description": "Numbers of items per page",
          "sourceRange": {
            "start": {
              "line": 450,
              "column": 20
            },
            "end": {
              "line": 454,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "start-field",
          "description": "Determine which field we use in the request to define the start of the paging",
          "sourceRange": {
            "start": {
              "line": 468,
              "column": 20
            },
            "end": {
              "line": 471,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "limit-field",
          "description": "Determines which field is used in the request to send the limit",
          "sourceRange": {
            "start": {
              "line": 476,
              "column": 20
            },
            "end": {
              "line": 479,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "total-items",
          "description": "Information how many items would exist in total",
          "sourceRange": {
            "start": {
              "line": 484,
              "column": 20
            },
            "end": {
              "line": 487,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "page",
          "description": "current page we are on",
          "sourceRange": {
            "start": {
              "line": 492,
              "column": 20
            },
            "end": {
              "line": 496,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "allow-deselect",
          "description": "Determines if deselect is allowed",
          "sourceRange": {
            "start": {
              "line": 520,
              "column": 20
            },
            "end": {
              "line": 523,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-label-float",
          "description": "Set to true to disable the floating label.",
          "sourceRange": {
            "start": {
              "line": 528,
              "column": 20
            },
            "end": {
              "line": 531,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "always-float-label",
          "description": "Set to true to always float the label.",
          "sourceRange": {
            "start": {
              "line": 536,
              "column": 20
            },
            "end": {
              "line": 539,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "required",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 541,
              "column": 20
            },
            "end": {
              "line": 544,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-animations",
          "description": "Set to true to disable animations when opening and closing the\ndropdown.",
          "sourceRange": {
            "start": {
              "line": 550,
              "column": 20
            },
            "end": {
              "line": 553,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "vertical-align",
          "description": "Wraps vertical align value of paper-dropdown-menu",
          "sourceRange": {
            "start": {
              "line": 558,
              "column": 20
            },
            "end": {
              "line": 561,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the menu dropdown\nhorizontally relative to the dropdown trigger.",
          "sourceRange": {
            "start": {
              "line": 567,
              "column": 20
            },
            "end": {
              "line": 570,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "dynamic-align",
          "description": "If true, the `horizontalAlign` and `verticalAlign` properties will\nbe considered preferences instead of strict requirements when\npositioning the dropdown and may be changed if doing so reduces\nthe area of the dropdown falling outside of `fitInto`.",
          "sourceRange": {
            "start": {
              "line": 578,
              "column": 20
            },
            "end": {
              "line": 580,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "fit-into",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 582,
              "column": 20
            },
            "end": {
              "line": 584,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "items-changed",
          "description": "Fired when the `items` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-value-changed",
          "description": "Fired when the `selectedValue` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "invalid-changed",
          "description": "Fired when the `invalid` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-item-changed",
          "description": "Fired when the `selectedItem` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "prefix",
          "range": {
            "file": "actindo-combobox.html",
            "start": {
              "line": 201,
              "column": 12
            },
            "end": {
              "line": 201,
              "column": 53
            }
          }
        }
      ],
      "tagname": "actindo-combobox"
    }
  ]
}
